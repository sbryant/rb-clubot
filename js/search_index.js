var search_data = {"index":{"searchIndex":["clubot","client","connect()","new()","request()"],"longSearchIndex":["clubot","clubot::client","clubot::client#connect()","clubot::client::new()","clubot::client#request()"],"info":[["Clubot","","Clubot.html","","<p>Clubot module See github.com/hackinggibsons/clubot/ for more information on\nrunning a clubot.\n"],["Clubot::Client","","Clubot/Client.html","","<p>The Clubot client class Clubot clients bind SUB and DEALER sockets for\nreceiving chat broadcast and  ...\n"],["connect","Clubot::Client","Clubot/Client.html#method-i-connect","()","<p>Connect the ZMQ::PUB and ZMQ::DEALER. Also setup up the subscription\nfilters\n<p>Returns nothing.\n"],["new","Clubot::Client","Clubot/Client.html#method-c-new","(sub_addr = \"tcp://localhost:14532\", dealer_addr = \"tcp://localhost:14533\", filters = [\":PRIVMSG\", \":INVITE\", \":JOIN\", \":BOOT\", \":PART\"])","<p>Create the ZMQ sockets for commutation.\n<p>sub_addr &mdash; A ZMQ address string. (default: 'tcp://localhost:14532') ...\n"],["request","Clubot::Client","Clubot/Client.html#method-i-request","(data, &blk)","<p>Make a request to clubot.\n<p>data &mdash; A hash representing the kind of request. The data is first encoded as  ...\n"]]}}